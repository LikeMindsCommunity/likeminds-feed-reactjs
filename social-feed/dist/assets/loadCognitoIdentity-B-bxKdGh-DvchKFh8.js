import{C as mt,r as ft,a as yt,b as vt,c as Et,g as xt,d as wt,e as Pt,f as St,h as Ct,i as It,j as bt,k as Rt,l as tt,m as et,n as nt,o as At,p as Dt,q as Ot,s as kt,D as $t,t as Ft,F as Nt,u as zt,v as Ut,w as Ht,x as Tt,y as jt,z as Mt,A as Lt,B as qt,E as Gt,G as Bt,H as Vt,I as g,J as it,K as Wt,L as st,S as L,M as Kt,N as Jt,O as Xt,P as Yt,Q as _t,R as Qt,T as Zt,U as te,V as ee,W as ne,X as ie,Y as R,Z as se,_ as oe,$ as re,a0 as ae,a1 as ce,a2 as de,a3 as ue}from"./index-B60huWh1.js";const d=t=>{if(t==null)return{};if(Array.isArray(t))return t.filter(e=>e!=null).map(d);if(typeof t=="object"){const e={};for(const n of Object.keys(t))t[n]!=null&&(e[n]=d(t[n]));return e}return t},q=t=>{var e,n;return ce.isInstance(t)?((e=t.headers)==null?void 0:e.date)??((n=t.headers)==null?void 0:n.Date):void 0},ot=t=>new Date(Date.now()+t),le=(t,e)=>Math.abs(ot(e).getTime()-t)>=3e5,G=(t,e)=>{const n=Date.parse(t);return le(n,e)?n-Date.now():e},P=(t,e)=>{if(!e)throw new Error(`Property \`${t}\` is not resolved for AWS SDK SigV4Auth`);return e},pe=async t=>{var e,n,i;const s=P("context",t.context),r=P("config",t.config),o=(i=(n=(e=s.endpointV2)==null?void 0:e.properties)==null?void 0:n.authSchemes)==null?void 0:i[0],c=await P("signer",r.signer)(o),u=t==null?void 0:t.signingRegion,a=t==null?void 0:t.signingName;return{config:r,signer:c,signingRegion:u,signingName:a}};class ge{async sign(e,n,i){if(!st.isInstance(e))throw new Error("The request is not an instance of `HttpRequest` and cannot be signed");const{config:s,signer:r,signingRegion:o,signingName:c}=await pe(i);return await r.sign(e,{signingDate:ot(s.systemClockOffset),signingRegion:o,signingService:c})}errorHandler(e){return n=>{const i=n.ServerTime??q(n.$response);if(i){const s=P("config",e.config),r=s.systemClockOffset;s.systemClockOffset=G(i,s.systemClockOffset),s.systemClockOffset!==r&&n.$metadata&&(n.$metadata.clockSkewCorrected=!0)}throw n}}successHandler(e,n){const i=q(e);if(i){const s=P("config",n.config);s.systemClockOffset=G(i,s.systemClockOffset)}}}class he{constructor(e){this.authSchemes=new Map;for(const[n,i]of Object.entries(e))i!==void 0&&this.authSchemes.set(n,i)}getIdentityProvider(e){return this.authSchemes.get(e)}}class me{async sign(e,n,i){return e}}const fe=t=>e=>rt(e)&&e.expiration.getTime()-Date.now()<t,ye=3e5,ve=fe(ye),rt=t=>t.expiration!==void 0,Ee=(t,e,n)=>{if(t===void 0)return;const i=typeof t!="function"?async()=>Promise.resolve(t):t;let s,r,o,c=!1;const u=async a=>{r||(r=i(a));try{s=await r,o=!0,c=!1}finally{r=void 0}return s};return e===void 0?async a=>((!o||a!=null&&a.forceRefresh)&&(s=await u(a)),s):async a=>((!o||a!=null&&a.forceRefresh)&&(s=await u(a)),c?s:n(s)?(e(s)&&await u(a),s):(c=!0,s))},C=t=>{if(typeof t=="function")return t;const e=Promise.resolve(t);return()=>e},xe=t=>{let e;t.credentials&&(e=Ee(t.credentials,ve,rt)),e||(t.credentialDefaultProvider?e=C(t.credentialDefaultProvider(Object.assign({},t,{parentClientConfig:t}))):e=async()=>{throw new Error("`credentials` is missing")});const{signingEscapePath:n=!0,systemClockOffset:i=t.systemClockOffset||0,sha256:s}=t;let r;return t.signer?r=C(t.signer):t.regionInfoProvider?r=()=>C(t.region)().then(async o=>[await t.regionInfoProvider(o,{useFipsEndpoint:await t.useFipsEndpoint(),useDualstackEndpoint:await t.useDualstackEndpoint()})||{},o]).then(([o,c])=>{const{signingRegion:u,signingService:a}=o;t.signingRegion=t.signingRegion||u||c,t.signingName=t.signingName||a||t.serviceId;const v={...t,credentials:e,region:t.signingRegion,service:t.signingName,sha256:s,uriEscapePath:n},ht=t.signerConstructor||L;return new ht(v)}):r=async o=>{o=Object.assign({},{name:"sigv4",signingName:t.signingName||t.defaultSigningName,signingRegion:await C(t.region)(),properties:{}},o);const c=o.signingRegion,u=o.signingName;t.signingRegion=t.signingRegion||c,t.signingName=t.signingName||u||t.serviceId;const a={...t,credentials:e,region:t.signingRegion,service:t.signingName,sha256:s,uriEscapePath:n},v=t.signerConstructor||L;return new v(a)},{...t,systemClockOffset:i,signingEscapePath:n,credentials:e,signer:r}},A=(t,e)=>Kt(t,e).then(n=>{if(n.length)try{return JSON.parse(n)}catch(i){throw(i==null?void 0:i.name)==="SyntaxError"&&Object.defineProperty(i,"$responseBodyText",{value:n}),i}return{}}),we=async(t,e)=>{const n=await A(t,e);return n.message=n.message??n.Message,n},Pe=(t,e)=>{const n=(r,o)=>Object.keys(r).find(c=>c.toLowerCase()===o.toLowerCase()),i=r=>{let o=r;return typeof o=="number"&&(o=o.toString()),o.indexOf(",")>=0&&(o=o.split(",")[0]),o.indexOf(":")>=0&&(o=o.split(":")[0]),o.indexOf("#")>=0&&(o=o.split("#")[1]),o},s=n(t.headers,"x-amzn-errortype");if(s!==void 0)return i(t.headers[s]);if(e.code!==void 0)return i(e.code);if(e.__type!==void 0)return i(e.__type)},Se=async(t,e,n)=>({operation:At(e).operation,region:await Dt(t.region)()||(()=>{throw new Error("expected `region` to be configured for `aws.auth#sigv4`")})()});function Ce(t){return{schemeId:"aws.auth#sigv4",signingProperties:{name:"cognito-identity",region:t.region},propertiesExtractor:(e,n)=>({signingProperties:{config:e,context:n}})}}function I(t){return{schemeId:"smithy.api#noAuth"}}const Ie=t=>{const e=[];switch(t.operation){case"GetCredentialsForIdentity":{e.push(I());break}case"GetId":{e.push(I());break}case"GetOpenIdToken":{e.push(I());break}case"UnlinkIdentity":{e.push(I());break}default:e.push(Ce(t))}return e},be=t=>({...xe(t)}),Re=t=>({...t,useDualstackEndpoint:t.useDualstackEndpoint??!1,useFipsEndpoint:t.useFipsEndpoint??!1,defaultSigningName:"cognito-identity"}),at={UseFIPS:{type:"builtInParams",name:"useFipsEndpoint"},Endpoint:{type:"builtInParams",name:"endpoint"},Region:{type:"builtInParams",name:"region"},UseDualStack:{type:"builtInParams",name:"useDualstackEndpoint"}},Ae="3.556.0",De={version:Ae},ct="required",m="fn",f="argv",x="ref",B=!0,V="isSet",S="booleanEquals",E="error",w="endpoint",y="tree",D="PartitionResult",W={[ct]:!1,type:"String"},K={[ct]:!0,default:!1,type:"Boolean"},J={[x]:"Endpoint"},dt={[m]:S,[f]:[{[x]:"UseFIPS"},!0]},ut={[m]:S,[f]:[{[x]:"UseDualStack"},!0]},h={},X={[m]:"getAttr",[f]:[{[x]:D},"supportsFIPS"]},Y={[m]:S,[f]:[!0,{[m]:"getAttr",[f]:[{[x]:D},"supportsDualStack"]}]},_=[dt],Q=[ut],Z=[{[x]:"Region"}],Oe={parameters:{Region:W,UseDualStack:K,UseFIPS:K,Endpoint:W},rules:[{conditions:[{[m]:V,[f]:[J]}],rules:[{conditions:_,error:"Invalid Configuration: FIPS and custom endpoint are not supported",type:E},{conditions:Q,error:"Invalid Configuration: Dualstack and custom endpoint are not supported",type:E},{endpoint:{url:J,properties:h,headers:h},type:w}],type:y},{conditions:[{[m]:V,[f]:Z}],rules:[{conditions:[{[m]:"aws.partition",[f]:Z,assign:D}],rules:[{conditions:[dt,ut],rules:[{conditions:[{[m]:S,[f]:[B,X]},Y],rules:[{endpoint:{url:"https://cognito-identity-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",properties:h,headers:h},type:w}],type:y},{error:"FIPS and DualStack are enabled, but this partition does not support one or both",type:E}],type:y},{conditions:_,rules:[{conditions:[{[m]:S,[f]:[X,B]}],rules:[{endpoint:{url:"https://cognito-identity-fips.{Region}.{PartitionResult#dnsSuffix}",properties:h,headers:h},type:w}],type:y},{error:"FIPS is enabled but this partition does not support FIPS",type:E}],type:y},{conditions:Q,rules:[{conditions:[Y],rules:[{endpoint:{url:"https://cognito-identity.{Region}.{PartitionResult#dualStackDnsSuffix}",properties:h,headers:h},type:w}],type:y},{error:"DualStack is enabled but this partition does not support DualStack",type:E}],type:y},{endpoint:{url:"https://cognito-identity.{Region}.{PartitionResult#dnsSuffix}",properties:h,headers:h},type:w}],type:y}],type:y},{error:"Invalid Configuration: Missing Region",type:E}]},ke=Oe,$e=(t,e={})=>se(ke,{endpointParams:t,logger:e.logger});de.aws=ue;const Fe=t=>({apiVersion:"2014-06-30",base64Decoder:(t==null?void 0:t.base64Decoder)??Jt,base64Encoder:(t==null?void 0:t.base64Encoder)??Xt,disableHostPrefix:(t==null?void 0:t.disableHostPrefix)??!1,endpointProvider:(t==null?void 0:t.endpointProvider)??$e,extensions:(t==null?void 0:t.extensions)??[],httpAuthSchemeProvider:(t==null?void 0:t.httpAuthSchemeProvider)??Ie,httpAuthSchemes:(t==null?void 0:t.httpAuthSchemes)??[{schemeId:"aws.auth#sigv4",identityProvider:e=>e.getIdentityProvider("aws.auth#sigv4"),signer:new ge},{schemeId:"smithy.api#noAuth",identityProvider:e=>e.getIdentityProvider("smithy.api#noAuth")||(async()=>({})),signer:new me}],logger:(t==null?void 0:t.logger)??new Yt,serviceId:(t==null?void 0:t.serviceId)??"Cognito Identity",urlParser:(t==null?void 0:t.urlParser)??_t,utf8Decoder:(t==null?void 0:t.utf8Decoder)??Qt,utf8Encoder:(t==null?void 0:t.utf8Encoder)??Zt}),Ne=t=>{const e=te(t),n=()=>e().then(ee),i=Fe(t);return{...i,...t,runtime:"browser",defaultsMode:e,bodyLengthChecker:(t==null?void 0:t.bodyLengthChecker)??Ot,credentialDefaultProvider:(t==null?void 0:t.credentialDefaultProvider)??(s=>()=>Promise.reject(new Error("Credential is missing"))),defaultUserAgentProvider:(t==null?void 0:t.defaultUserAgentProvider)??kt({serviceId:i.serviceId,clientVersion:De.version}),maxAttempts:(t==null?void 0:t.maxAttempts)??$t,region:(t==null?void 0:t.region)??Ft("Region is missing"),requestHandler:Nt.create((t==null?void 0:t.requestHandler)??n),retryMode:(t==null?void 0:t.retryMode)??(async()=>(await n()).retryMode||zt),sha256:(t==null?void 0:t.sha256)??Ut.Sha256,streamCollector:(t==null?void 0:t.streamCollector)??Ht,useDualstackEndpoint:(t==null?void 0:t.useDualstackEndpoint)??(()=>Promise.resolve(Tt)),useFipsEndpoint:(t==null?void 0:t.useFipsEndpoint)??(()=>Promise.resolve(jt))}},ze=t=>{const e=t.httpAuthSchemes;let n=t.httpAuthSchemeProvider,i=t.credentials;return{setHttpAuthScheme(s){const r=e.findIndex(o=>o.schemeId===s.schemeId);r===-1?e.push(s):e.splice(r,1,s)},httpAuthSchemes(){return e},setHttpAuthSchemeProvider(s){n=s},httpAuthSchemeProvider(){return n},setCredentials(s){i=s},credentials(){return i}}},Ue=t=>({httpAuthSchemes:t.httpAuthSchemes(),httpAuthSchemeProvider:t.httpAuthSchemeProvider(),credentials:t.credentials()}),b=t=>t,He=(t,e)=>{const n={...b(ne(t)),...b(Mt(t)),...b(Lt(t)),...b(ze(t))};return e.forEach(i=>i.configure(n)),{...t,...qt(n),...Gt(n),...Bt(n),...Ue(n)}};class sn extends mt{constructor(...[e]){const n=Ne(e||{}),i=Re(n),s=ft(i),r=yt(s),o=vt(r),c=Vt(o),u=Et(c),a=be(u),v=He(a,(e==null?void 0:e.extensions)||[]);super(v),this.config=v,this.middlewareStack.use(xt(this.config)),this.middlewareStack.use(wt(this.config)),this.middlewareStack.use(Pt(this.config)),this.middlewareStack.use(St(this.config)),this.middlewareStack.use(Ct(this.config)),this.middlewareStack.use(It(this.config)),this.middlewareStack.use(bt(this.config,{httpAuthSchemeParametersProvider:this.getDefaultHttpAuthSchemeParametersProvider(),identityProviderConfigProvider:this.getIdentityProviderConfigProvider()})),this.middlewareStack.use(Rt(this.config))}destroy(){super.destroy()}getDefaultHttpAuthSchemeParametersProvider(){return Se}getIdentityProviderConfigProvider(){return async e=>new he({"aws.auth#sigv4":e.credentials})}}class l extends ie{constructor(e){super(e),Object.setPrototypeOf(this,l.prototype)}}class O extends l{constructor(e){super({name:"InternalErrorException",$fault:"server",...e}),this.name="InternalErrorException",this.$fault="server",Object.setPrototypeOf(this,O.prototype)}}class k extends l{constructor(e){super({name:"InvalidParameterException",$fault:"client",...e}),this.name="InvalidParameterException",this.$fault="client",Object.setPrototypeOf(this,k.prototype)}}class $ extends l{constructor(e){super({name:"LimitExceededException",$fault:"client",...e}),this.name="LimitExceededException",this.$fault="client",Object.setPrototypeOf(this,$.prototype)}}class F extends l{constructor(e){super({name:"NotAuthorizedException",$fault:"client",...e}),this.name="NotAuthorizedException",this.$fault="client",Object.setPrototypeOf(this,F.prototype)}}class N extends l{constructor(e){super({name:"ResourceConflictException",$fault:"client",...e}),this.name="ResourceConflictException",this.$fault="client",Object.setPrototypeOf(this,N.prototype)}}class z extends l{constructor(e){super({name:"TooManyRequestsException",$fault:"client",...e}),this.name="TooManyRequestsException",this.$fault="client",Object.setPrototypeOf(this,z.prototype)}}class U extends l{constructor(e){super({name:"ResourceNotFoundException",$fault:"client",...e}),this.name="ResourceNotFoundException",this.$fault="client",Object.setPrototypeOf(this,U.prototype)}}class H extends l{constructor(e){super({name:"ExternalServiceException",$fault:"client",...e}),this.name="ExternalServiceException",this.$fault="client",Object.setPrototypeOf(this,H.prototype)}}class T extends l{constructor(e){super({name:"InvalidIdentityPoolConfigurationException",$fault:"client",...e}),this.name="InvalidIdentityPoolConfigurationException",this.$fault="client",Object.setPrototypeOf(this,T.prototype)}}class j extends l{constructor(e){super({name:"DeveloperUserAlreadyRegisteredException",$fault:"client",...e}),this.name="DeveloperUserAlreadyRegisteredException",this.$fault="client",Object.setPrototypeOf(this,j.prototype)}}class M extends l{constructor(e){super({name:"ConcurrentModificationException",$fault:"client",...e}),this.name="ConcurrentModificationException",this.$fault="client",Object.setPrototypeOf(this,M.prototype)}}const Te=async(t,e)=>{const n=gt("GetCredentialsForIdentity");let i;return i=JSON.stringify(d(t)),pt(e,n,"/",void 0,i)},je=async(t,e)=>{const n=gt("GetId");let i;return i=JSON.stringify(d(t)),pt(e,n,"/",void 0,i)},Me=async(t,e)=>{if(t.statusCode>=300)return lt(t,e);const n=await A(t.body,e);let i={};return i=tn(n),{$metadata:p(t),...i}},Le=async(t,e)=>{if(t.statusCode>=300)return lt(t,e);const n=await A(t.body,e);let i={};return i=d(n),{$metadata:p(t),...i}},lt=async(t,e)=>{const n={...t,body:await we(t.body,e)},i=Pe(t,n.body);switch(i){case"InternalErrorException":case"com.amazonaws.cognitoidentity#InternalErrorException":throw await Ve(n);case"InvalidParameterException":case"com.amazonaws.cognitoidentity#InvalidParameterException":throw await Ke(n);case"LimitExceededException":case"com.amazonaws.cognitoidentity#LimitExceededException":throw await Je(n);case"NotAuthorizedException":case"com.amazonaws.cognitoidentity#NotAuthorizedException":throw await Xe(n);case"ResourceConflictException":case"com.amazonaws.cognitoidentity#ResourceConflictException":throw await Ye(n);case"TooManyRequestsException":case"com.amazonaws.cognitoidentity#TooManyRequestsException":throw await Qe(n);case"ResourceNotFoundException":case"com.amazonaws.cognitoidentity#ResourceNotFoundException":throw await _e(n);case"ExternalServiceException":case"com.amazonaws.cognitoidentity#ExternalServiceException":throw await Be(n);case"InvalidIdentityPoolConfigurationException":case"com.amazonaws.cognitoidentity#InvalidIdentityPoolConfigurationException":throw await We(n);case"DeveloperUserAlreadyRegisteredException":case"com.amazonaws.cognitoidentity#DeveloperUserAlreadyRegisteredException":throw await Ge(n);case"ConcurrentModificationException":case"com.amazonaws.cognitoidentity#ConcurrentModificationException":throw await qe(n);default:const s=n.body;return en({output:t,parsedBody:s,errorCode:i})}},qe=async(t,e)=>{const n=t.body,i=d(n),s=new M({$metadata:p(t),...i});return g(s,n)},Ge=async(t,e)=>{const n=t.body,i=d(n),s=new j({$metadata:p(t),...i});return g(s,n)},Be=async(t,e)=>{const n=t.body,i=d(n),s=new H({$metadata:p(t),...i});return g(s,n)},Ve=async(t,e)=>{const n=t.body,i=d(n),s=new O({$metadata:p(t),...i});return g(s,n)},We=async(t,e)=>{const n=t.body,i=d(n),s=new T({$metadata:p(t),...i});return g(s,n)},Ke=async(t,e)=>{const n=t.body,i=d(n),s=new k({$metadata:p(t),...i});return g(s,n)},Je=async(t,e)=>{const n=t.body,i=d(n),s=new $({$metadata:p(t),...i});return g(s,n)},Xe=async(t,e)=>{const n=t.body,i=d(n),s=new F({$metadata:p(t),...i});return g(s,n)},Ye=async(t,e)=>{const n=t.body,i=d(n),s=new N({$metadata:p(t),...i});return g(s,n)},_e=async(t,e)=>{const n=t.body,i=d(n),s=new U({$metadata:p(t),...i});return g(s,n)},Qe=async(t,e)=>{const n=t.body,i=d(n),s=new z({$metadata:p(t),...i});return g(s,n)},Ze=(t,e)=>it(t,{AccessKeyId:R,Expiration:n=>oe(re(ae(n))),SecretKey:R,SessionToken:R}),tn=(t,e)=>it(t,{Credentials:n=>Ze(n),IdentityId:R}),p=t=>({httpStatusCode:t.statusCode,requestId:t.headers["x-amzn-requestid"]??t.headers["x-amzn-request-id"]??t.headers["x-amz-request-id"],extendedRequestId:t.headers["x-amz-id-2"],cfId:t.headers["x-amz-cf-id"]}),en=Wt(l),pt=async(t,e,n,i,s)=>{const{hostname:r,protocol:o="https",port:c,path:u}=await t.endpoint(),a={protocol:o,hostname:r,port:c,method:"POST",path:u.endsWith("/")?u.slice(0,-1)+n:u+n,headers:e};return s!==void 0&&(a.body=s),new st(a)};function gt(t){return{"content-type":"application/x-amz-json-1.1","x-amz-target":`AWSCognitoIdentityService.${t}`}}class on extends tt.classBuilder().ep({...at}).m(function(e,n,i,s){return[et(i,this.serialize,this.deserialize),nt(i,e.getEndpointParameterInstructions())]}).s("AWSCognitoIdentityService","GetCredentialsForIdentity",{}).n("CognitoIdentityClient","GetCredentialsForIdentityCommand").f(void 0,void 0).ser(Te).de(Me).build(){}class rn extends tt.classBuilder().ep({...at}).m(function(e,n,i,s){return[et(i,this.serialize,this.deserialize),nt(i,e.getEndpointParameterInstructions())]}).s("AWSCognitoIdentityService","GetId",{}).n("CognitoIdentityClient","GetIdCommand").f(void 0,void 0).ser(je).de(Le).build(){}export{sn as CognitoIdentityClient,on as GetCredentialsForIdentityCommand,rn as GetIdCommand};
