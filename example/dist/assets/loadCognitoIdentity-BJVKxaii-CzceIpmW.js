import{C as mt,r as yt,a as ft,b as vt,c as wt,g as Et,d as xt,e as Pt,f as St,h as bt,i as Ct,j as It,k as kt,l as tt,m as et,n as nt,o as Rt,p as At,q as Dt,s as Ot,D as $t,t as Nt,F as jt,u as Ft,v as zt,w as Ut,x as Ht,y as Tt,z as Mt,A as Lt,B as qt,E as Bt,G as Gt,H as Wt,I as g,J as it,K as Kt,L as st,S as L,M as Vt,N as Jt,O as _t,P as Xt,Q as Yt,R as Qt,T as Zt,U as te,V as ee,W as ne,X as ie,Y as k,Z as se,_ as oe,$ as re,a0 as ae,a1 as ce,a2 as de,a3 as le}from"./index-BbnZfmCm.js";const d=t=>{if(t==null)return{};if(Array.isArray(t))return t.filter(e=>e!=null).map(d);if(typeof t=="object"){const e={};for(const n of Object.keys(t))t[n]!=null&&(e[n]=d(t[n]));return e}return t},q=t=>{var e,n;return ce.isInstance(t)?((e=t.headers)==null?void 0:e.date)??((n=t.headers)==null?void 0:n.Date):void 0},ot=t=>new Date(Date.now()+t),ue=(t,e)=>Math.abs(ot(e).getTime()-t)>=3e5,B=(t,e)=>{const n=Date.parse(t);return ue(n,e)?n-Date.now():e},P=(t,e)=>{if(!e)throw new Error(`Property \`${t}\` is not resolved for AWS SDK SigV4Auth`);return e},pe=async t=>{var e,n,i;const s=P("context",t.context),r=P("config",t.config),o=(i=(n=(e=s.endpointV2)==null?void 0:e.properties)==null?void 0:n.authSchemes)==null?void 0:i[0],c=await P("signer",r.signer)(o),l=t==null?void 0:t.signingRegion,a=t==null?void 0:t.signingName;return{config:r,signer:c,signingRegion:l,signingName:a}};class ge{async sign(e,n,i){if(!st.isInstance(e))throw new Error("The request is not an instance of `HttpRequest` and cannot be signed");const{config:s,signer:r,signingRegion:o,signingName:c}=await pe(i);return await r.sign(e,{signingDate:ot(s.systemClockOffset),signingRegion:o,signingService:c})}errorHandler(e){return n=>{const i=n.ServerTime??q(n.$response);if(i){const s=P("config",e.config),r=s.systemClockOffset;s.systemClockOffset=B(i,s.systemClockOffset),s.systemClockOffset!==r&&n.$metadata&&(n.$metadata.clockSkewCorrected=!0)}throw n}}successHandler(e,n){const i=q(e);if(i){const s=P("config",n.config);s.systemClockOffset=B(i,s.systemClockOffset)}}}class he{constructor(e){this.authSchemes=new Map;for(const[n,i]of Object.entries(e))i!==void 0&&this.authSchemes.set(n,i)}getIdentityProvider(e){return this.authSchemes.get(e)}}class me{async sign(e,n,i){return e}}const ye=t=>e=>rt(e)&&e.expiration.getTime()-Date.now()<t,fe=3e5,ve=ye(fe),rt=t=>t.expiration!==void 0,we=(t,e,n)=>{if(t===void 0)return;const i=typeof t!="function"?async()=>Promise.resolve(t):t;let s,r,o,c=!1;const l=async a=>{r||(r=i(a));try{s=await r,o=!0,c=!1}finally{r=void 0}return s};return e===void 0?async a=>((!o||a!=null&&a.forceRefresh)&&(s=await l(a)),s):async a=>((!o||a!=null&&a.forceRefresh)&&(s=await l(a)),c?s:n(s)?(e(s)&&await l(a),s):(c=!0,s))},b=t=>{if(typeof t=="function")return t;const e=Promise.resolve(t);return()=>e},Ee=t=>{let e;t.credentials&&(e=we(t.credentials,ve,rt)),e||(t.credentialDefaultProvider?e=b(t.credentialDefaultProvider(Object.assign({},t,{parentClientConfig:t}))):e=async()=>{throw new Error("`credentials` is missing")});const{signingEscapePath:n=!0,systemClockOffset:i=t.systemClockOffset||0,sha256:s}=t;let r;return t.signer?r=b(t.signer):t.regionInfoProvider?r=()=>b(t.region)().then(async o=>[await t.regionInfoProvider(o,{useFipsEndpoint:await t.useFipsEndpoint(),useDualstackEndpoint:await t.useDualstackEndpoint()})||{},o]).then(([o,c])=>{const{signingRegion:l,signingService:a}=o;t.signingRegion=t.signingRegion||l||c,t.signingName=t.signingName||a||t.serviceId;const v={...t,credentials:e,region:t.signingRegion,service:t.signingName,sha256:s,uriEscapePath:n},ht=t.signerConstructor||L;return new ht(v)}):r=async o=>{o=Object.assign({},{name:"sigv4",signingName:t.signingName||t.defaultSigningName,signingRegion:await b(t.region)(),properties:{}},o);const c=o.signingRegion,l=o.signingName;t.signingRegion=t.signingRegion||c,t.signingName=t.signingName||l||t.serviceId;const a={...t,credentials:e,region:t.signingRegion,service:t.signingName,sha256:s,uriEscapePath:n},v=t.signerConstructor||L;return new v(a)},{...t,systemClockOffset:i,signingEscapePath:n,credentials:e,signer:r}},R=(t,e)=>Vt(t,e).then(n=>{if(n.length)try{return JSON.parse(n)}catch(i){throw(i==null?void 0:i.name)==="SyntaxError"&&Object.defineProperty(i,"$responseBodyText",{value:n}),i}return{}}),xe=async(t,e)=>{const n=await R(t,e);return n.message=n.message??n.Message,n},Pe=(t,e)=>{const n=(r,o)=>Object.keys(r).find(c=>c.toLowerCase()===o.toLowerCase()),i=r=>{let o=r;return typeof o=="number"&&(o=o.toString()),o.indexOf(",")>=0&&(o=o.split(",")[0]),o.indexOf(":")>=0&&(o=o.split(":")[0]),o.indexOf("#")>=0&&(o=o.split("#")[1]),o},s=n(t.headers,"x-amzn-errortype");if(s!==void 0)return i(t.headers[s]);if(e.code!==void 0)return i(e.code);if(e.__type!==void 0)return i(e.__type)},Se=async(t,e,n)=>({operation:Rt(e).operation,region:await At(t.region)()||(()=>{throw new Error("expected `region` to be configured for `aws.auth#sigv4`")})()});function be(t){return{schemeId:"aws.auth#sigv4",signingProperties:{name:"cognito-identity",region:t.region},propertiesExtractor:(e,n)=>({signingProperties:{config:e,context:n}})}}function C(t){return{schemeId:"smithy.api#noAuth"}}const Ce=t=>{const e=[];switch(t.operation){case"GetCredentialsForIdentity":{e.push(C());break}case"GetId":{e.push(C());break}case"GetOpenIdToken":{e.push(C());break}case"UnlinkIdentity":{e.push(C());break}default:e.push(be(t))}return e},Ie=t=>({...Ee(t)}),ke=t=>({...t,useDualstackEndpoint:t.useDualstackEndpoint??!1,useFipsEndpoint:t.useFipsEndpoint??!1,defaultSigningName:"cognito-identity"}),at={UseFIPS:{type:"builtInParams",name:"useFipsEndpoint"},Endpoint:{type:"builtInParams",name:"endpoint"},Region:{type:"builtInParams",name:"region"},UseDualStack:{type:"builtInParams",name:"useDualstackEndpoint"}},Re="@aws-sdk/client-cognito-identity",Ae="AWS SDK for JavaScript Cognito Identity Client for Node.js, Browser and React Native",De="3.556.0",Oe={build:"concurrently 'yarn:build:cjs' 'yarn:build:es' 'yarn:build:types'","build:cjs":"node ../../scripts/compilation/inline client-cognito-identity","build:es":"tsc -p tsconfig.es.json","build:include:deps":"lerna run --scope $npm_package_name --include-dependencies build","build:types":"tsc -p tsconfig.types.json","build:types:downlevel":"downlevel-dts dist-types dist-types/ts3.4",clean:"rimraf ./dist-* && rimraf *.tsbuildinfo","extract:docs":"api-extractor run --local","generate:client":"node ../../scripts/generate-clients/single-service --solo cognito-identity","test:e2e":"ts-mocha test/**/*.ispec.ts && karma start karma.conf.js"},$e="./dist-cjs/index.js",Ne="./dist-types/index.d.ts",je="./dist-es/index.js",Fe=!1,ze={"@aws-crypto/sha256-browser":"3.0.0","@aws-crypto/sha256-js":"3.0.0","@aws-sdk/client-sts":"3.556.0","@aws-sdk/core":"3.556.0","@aws-sdk/credential-provider-node":"3.556.0","@aws-sdk/middleware-host-header":"3.535.0","@aws-sdk/middleware-logger":"3.535.0","@aws-sdk/middleware-recursion-detection":"3.535.0","@aws-sdk/middleware-user-agent":"3.540.0","@aws-sdk/region-config-resolver":"3.535.0","@aws-sdk/types":"3.535.0","@aws-sdk/util-endpoints":"3.540.0","@aws-sdk/util-user-agent-browser":"3.535.0","@aws-sdk/util-user-agent-node":"3.535.0","@smithy/config-resolver":"^2.2.0","@smithy/core":"^1.4.2","@smithy/fetch-http-handler":"^2.5.0","@smithy/hash-node":"^2.2.0","@smithy/invalid-dependency":"^2.2.0","@smithy/middleware-content-length":"^2.2.0","@smithy/middleware-endpoint":"^2.5.1","@smithy/middleware-retry":"^2.3.1","@smithy/middleware-serde":"^2.3.0","@smithy/middleware-stack":"^2.2.0","@smithy/node-config-provider":"^2.3.0","@smithy/node-http-handler":"^2.5.0","@smithy/protocol-http":"^3.3.0","@smithy/smithy-client":"^2.5.1","@smithy/types":"^2.12.0","@smithy/url-parser":"^2.2.0","@smithy/util-base64":"^2.3.0","@smithy/util-body-length-browser":"^2.2.0","@smithy/util-body-length-node":"^2.3.0","@smithy/util-defaults-mode-browser":"^2.2.1","@smithy/util-defaults-mode-node":"^2.3.1","@smithy/util-endpoints":"^1.2.0","@smithy/util-middleware":"^2.2.0","@smithy/util-retry":"^2.2.0","@smithy/util-utf8":"^2.3.0",tslib:"^2.6.2"},Ue={"@aws-sdk/client-iam":"3.556.0","@smithy/service-client-documentation-generator":"^2.2.0","@tsconfig/node14":"1.0.3","@types/chai":"^4.2.11","@types/mocha":"^8.0.4","@types/node":"^14.14.31",concurrently:"7.0.0","downlevel-dts":"0.10.1",rimraf:"3.0.2",typescript:"~4.9.5"},He={node:">=14.0.0"},Te={"<4.0":{"dist-types/*":["dist-types/ts3.4/*"]}},Me=["dist-*/**"],Le={name:"AWS SDK for JavaScript Team",url:"https://aws.amazon.com/javascript/"},qe="Apache-2.0",Be={"./dist-es/runtimeConfig":"./dist-es/runtimeConfig.browser"},Ge="https://github.com/aws/aws-sdk-js-v3/tree/main/clients/client-cognito-identity",We={type:"git",url:"https://github.com/aws/aws-sdk-js-v3.git",directory:"clients/client-cognito-identity"},Ke={name:Re,description:Ae,version:De,scripts:Oe,main:$e,types:Ne,module:je,sideEffects:Fe,dependencies:ze,devDependencies:Ue,engines:He,typesVersions:Te,files:Me,author:Le,license:qe,browser:Be,"react-native":{"./dist-es/runtimeConfig":"./dist-es/runtimeConfig.native"},homepage:Ge,repository:We},ct="required",m="fn",y="argv",E="ref",G=!0,W="isSet",S="booleanEquals",w="error",x="endpoint",f="tree",A="PartitionResult",K={[ct]:!1,type:"String"},V={[ct]:!0,default:!1,type:"Boolean"},J={[E]:"Endpoint"},dt={[m]:S,[y]:[{[E]:"UseFIPS"},!0]},lt={[m]:S,[y]:[{[E]:"UseDualStack"},!0]},h={},_={[m]:"getAttr",[y]:[{[E]:A},"supportsFIPS"]},X={[m]:S,[y]:[!0,{[m]:"getAttr",[y]:[{[E]:A},"supportsDualStack"]}]},Y=[dt],Q=[lt],Z=[{[E]:"Region"}],Ve={version:"1.0",parameters:{Region:K,UseDualStack:V,UseFIPS:V,Endpoint:K},rules:[{conditions:[{[m]:W,[y]:[J]}],rules:[{conditions:Y,error:"Invalid Configuration: FIPS and custom endpoint are not supported",type:w},{conditions:Q,error:"Invalid Configuration: Dualstack and custom endpoint are not supported",type:w},{endpoint:{url:J,properties:h,headers:h},type:x}],type:f},{conditions:[{[m]:W,[y]:Z}],rules:[{conditions:[{[m]:"aws.partition",[y]:Z,assign:A}],rules:[{conditions:[dt,lt],rules:[{conditions:[{[m]:S,[y]:[G,_]},X],rules:[{endpoint:{url:"https://cognito-identity-fips.{Region}.{PartitionResult#dualStackDnsSuffix}",properties:h,headers:h},type:x}],type:f},{error:"FIPS and DualStack are enabled, but this partition does not support one or both",type:w}],type:f},{conditions:Y,rules:[{conditions:[{[m]:S,[y]:[_,G]}],rules:[{endpoint:{url:"https://cognito-identity-fips.{Region}.{PartitionResult#dnsSuffix}",properties:h,headers:h},type:x}],type:f},{error:"FIPS is enabled but this partition does not support FIPS",type:w}],type:f},{conditions:Q,rules:[{conditions:[X],rules:[{endpoint:{url:"https://cognito-identity.{Region}.{PartitionResult#dualStackDnsSuffix}",properties:h,headers:h},type:x}],type:f},{error:"DualStack is enabled but this partition does not support DualStack",type:w}],type:f},{endpoint:{url:"https://cognito-identity.{Region}.{PartitionResult#dnsSuffix}",properties:h,headers:h},type:x}],type:f}],type:f},{error:"Invalid Configuration: Missing Region",type:w}]},Je=Ve,_e=(t,e={})=>se(Je,{endpointParams:t,logger:e.logger});de.aws=le;const Xe=t=>({apiVersion:"2014-06-30",base64Decoder:(t==null?void 0:t.base64Decoder)??Jt,base64Encoder:(t==null?void 0:t.base64Encoder)??_t,disableHostPrefix:(t==null?void 0:t.disableHostPrefix)??!1,endpointProvider:(t==null?void 0:t.endpointProvider)??_e,extensions:(t==null?void 0:t.extensions)??[],httpAuthSchemeProvider:(t==null?void 0:t.httpAuthSchemeProvider)??Ce,httpAuthSchemes:(t==null?void 0:t.httpAuthSchemes)??[{schemeId:"aws.auth#sigv4",identityProvider:e=>e.getIdentityProvider("aws.auth#sigv4"),signer:new ge},{schemeId:"smithy.api#noAuth",identityProvider:e=>e.getIdentityProvider("smithy.api#noAuth")||(async()=>({})),signer:new me}],logger:(t==null?void 0:t.logger)??new Xt,serviceId:(t==null?void 0:t.serviceId)??"Cognito Identity",urlParser:(t==null?void 0:t.urlParser)??Yt,utf8Decoder:(t==null?void 0:t.utf8Decoder)??Qt,utf8Encoder:(t==null?void 0:t.utf8Encoder)??Zt}),Ye=t=>{const e=te(t),n=()=>e().then(ee),i=Xe(t);return{...i,...t,runtime:"browser",defaultsMode:e,bodyLengthChecker:(t==null?void 0:t.bodyLengthChecker)??Dt,credentialDefaultProvider:(t==null?void 0:t.credentialDefaultProvider)??(s=>()=>Promise.reject(new Error("Credential is missing"))),defaultUserAgentProvider:(t==null?void 0:t.defaultUserAgentProvider)??Ot({serviceId:i.serviceId,clientVersion:Ke.version}),maxAttempts:(t==null?void 0:t.maxAttempts)??$t,region:(t==null?void 0:t.region)??Nt("Region is missing"),requestHandler:jt.create((t==null?void 0:t.requestHandler)??n),retryMode:(t==null?void 0:t.retryMode)??(async()=>(await n()).retryMode||Ft),sha256:(t==null?void 0:t.sha256)??zt.Sha256,streamCollector:(t==null?void 0:t.streamCollector)??Ut,useDualstackEndpoint:(t==null?void 0:t.useDualstackEndpoint)??(()=>Promise.resolve(Ht)),useFipsEndpoint:(t==null?void 0:t.useFipsEndpoint)??(()=>Promise.resolve(Tt))}},Qe=t=>{const e=t.httpAuthSchemes;let n=t.httpAuthSchemeProvider,i=t.credentials;return{setHttpAuthScheme(s){const r=e.findIndex(o=>o.schemeId===s.schemeId);r===-1?e.push(s):e.splice(r,1,s)},httpAuthSchemes(){return e},setHttpAuthSchemeProvider(s){n=s},httpAuthSchemeProvider(){return n},setCredentials(s){i=s},credentials(){return i}}},Ze=t=>({httpAuthSchemes:t.httpAuthSchemes(),httpAuthSchemeProvider:t.httpAuthSchemeProvider(),credentials:t.credentials()}),I=t=>t,tn=(t,e)=>{const n={...I(ne(t)),...I(Mt(t)),...I(Lt(t)),...I(Qe(t))};return e.forEach(i=>i.configure(n)),{...t,...qt(n),...Bt(n),...Gt(n),...Ze(n)}};class xn extends mt{constructor(...[e]){const n=Ye(e||{}),i=ke(n),s=yt(i),r=ft(s),o=vt(r),c=Wt(o),l=wt(c),a=Ie(l),v=tn(a,(e==null?void 0:e.extensions)||[]);super(v),this.config=v,this.middlewareStack.use(Et(this.config)),this.middlewareStack.use(xt(this.config)),this.middlewareStack.use(Pt(this.config)),this.middlewareStack.use(St(this.config)),this.middlewareStack.use(bt(this.config)),this.middlewareStack.use(Ct(this.config)),this.middlewareStack.use(It(this.config,{httpAuthSchemeParametersProvider:this.getDefaultHttpAuthSchemeParametersProvider(),identityProviderConfigProvider:this.getIdentityProviderConfigProvider()})),this.middlewareStack.use(kt(this.config))}destroy(){super.destroy()}getDefaultHttpAuthSchemeParametersProvider(){return Se}getIdentityProviderConfigProvider(){return async e=>new he({"aws.auth#sigv4":e.credentials})}}class u extends ie{constructor(e){super(e),Object.setPrototypeOf(this,u.prototype)}}class D extends u{constructor(e){super({name:"InternalErrorException",$fault:"server",...e}),this.name="InternalErrorException",this.$fault="server",Object.setPrototypeOf(this,D.prototype)}}class O extends u{constructor(e){super({name:"InvalidParameterException",$fault:"client",...e}),this.name="InvalidParameterException",this.$fault="client",Object.setPrototypeOf(this,O.prototype)}}class $ extends u{constructor(e){super({name:"LimitExceededException",$fault:"client",...e}),this.name="LimitExceededException",this.$fault="client",Object.setPrototypeOf(this,$.prototype)}}class N extends u{constructor(e){super({name:"NotAuthorizedException",$fault:"client",...e}),this.name="NotAuthorizedException",this.$fault="client",Object.setPrototypeOf(this,N.prototype)}}class j extends u{constructor(e){super({name:"ResourceConflictException",$fault:"client",...e}),this.name="ResourceConflictException",this.$fault="client",Object.setPrototypeOf(this,j.prototype)}}class F extends u{constructor(e){super({name:"TooManyRequestsException",$fault:"client",...e}),this.name="TooManyRequestsException",this.$fault="client",Object.setPrototypeOf(this,F.prototype)}}class z extends u{constructor(e){super({name:"ResourceNotFoundException",$fault:"client",...e}),this.name="ResourceNotFoundException",this.$fault="client",Object.setPrototypeOf(this,z.prototype)}}class U extends u{constructor(e){super({name:"ExternalServiceException",$fault:"client",...e}),this.name="ExternalServiceException",this.$fault="client",Object.setPrototypeOf(this,U.prototype)}}class H extends u{constructor(e){super({name:"InvalidIdentityPoolConfigurationException",$fault:"client",...e}),this.name="InvalidIdentityPoolConfigurationException",this.$fault="client",Object.setPrototypeOf(this,H.prototype)}}class T extends u{constructor(e){super({name:"DeveloperUserAlreadyRegisteredException",$fault:"client",...e}),this.name="DeveloperUserAlreadyRegisteredException",this.$fault="client",Object.setPrototypeOf(this,T.prototype)}}class M extends u{constructor(e){super({name:"ConcurrentModificationException",$fault:"client",...e}),this.name="ConcurrentModificationException",this.$fault="client",Object.setPrototypeOf(this,M.prototype)}}const en=async(t,e)=>{const n=gt("GetCredentialsForIdentity");let i;return i=JSON.stringify(d(t)),pt(e,n,"/",void 0,i)},nn=async(t,e)=>{const n=gt("GetId");let i;return i=JSON.stringify(d(t)),pt(e,n,"/",void 0,i)},sn=async(t,e)=>{if(t.statusCode>=300)return ut(t,e);const n=await R(t.body,e);let i={};return i=vn(n),{$metadata:p(t),...i}},on=async(t,e)=>{if(t.statusCode>=300)return ut(t,e);const n=await R(t.body,e);let i={};return i=d(n),{$metadata:p(t),...i}},ut=async(t,e)=>{const n={...t,body:await xe(t.body,e)},i=Pe(t,n.body);switch(i){case"InternalErrorException":case"com.amazonaws.cognitoidentity#InternalErrorException":throw await dn(n);case"InvalidParameterException":case"com.amazonaws.cognitoidentity#InvalidParameterException":throw await un(n);case"LimitExceededException":case"com.amazonaws.cognitoidentity#LimitExceededException":throw await pn(n);case"NotAuthorizedException":case"com.amazonaws.cognitoidentity#NotAuthorizedException":throw await gn(n);case"ResourceConflictException":case"com.amazonaws.cognitoidentity#ResourceConflictException":throw await hn(n);case"TooManyRequestsException":case"com.amazonaws.cognitoidentity#TooManyRequestsException":throw await yn(n);case"ResourceNotFoundException":case"com.amazonaws.cognitoidentity#ResourceNotFoundException":throw await mn(n);case"ExternalServiceException":case"com.amazonaws.cognitoidentity#ExternalServiceException":throw await cn(n);case"InvalidIdentityPoolConfigurationException":case"com.amazonaws.cognitoidentity#InvalidIdentityPoolConfigurationException":throw await ln(n);case"DeveloperUserAlreadyRegisteredException":case"com.amazonaws.cognitoidentity#DeveloperUserAlreadyRegisteredException":throw await an(n);case"ConcurrentModificationException":case"com.amazonaws.cognitoidentity#ConcurrentModificationException":throw await rn(n);default:const s=n.body;return wn({output:t,parsedBody:s,errorCode:i})}},rn=async(t,e)=>{const n=t.body,i=d(n),s=new M({$metadata:p(t),...i});return g(s,n)},an=async(t,e)=>{const n=t.body,i=d(n),s=new T({$metadata:p(t),...i});return g(s,n)},cn=async(t,e)=>{const n=t.body,i=d(n),s=new U({$metadata:p(t),...i});return g(s,n)},dn=async(t,e)=>{const n=t.body,i=d(n),s=new D({$metadata:p(t),...i});return g(s,n)},ln=async(t,e)=>{const n=t.body,i=d(n),s=new H({$metadata:p(t),...i});return g(s,n)},un=async(t,e)=>{const n=t.body,i=d(n),s=new O({$metadata:p(t),...i});return g(s,n)},pn=async(t,e)=>{const n=t.body,i=d(n),s=new $({$metadata:p(t),...i});return g(s,n)},gn=async(t,e)=>{const n=t.body,i=d(n),s=new N({$metadata:p(t),...i});return g(s,n)},hn=async(t,e)=>{const n=t.body,i=d(n),s=new j({$metadata:p(t),...i});return g(s,n)},mn=async(t,e)=>{const n=t.body,i=d(n),s=new z({$metadata:p(t),...i});return g(s,n)},yn=async(t,e)=>{const n=t.body,i=d(n),s=new F({$metadata:p(t),...i});return g(s,n)},fn=(t,e)=>it(t,{AccessKeyId:k,Expiration:n=>oe(re(ae(n))),SecretKey:k,SessionToken:k}),vn=(t,e)=>it(t,{Credentials:n=>fn(n),IdentityId:k}),p=t=>({httpStatusCode:t.statusCode,requestId:t.headers["x-amzn-requestid"]??t.headers["x-amzn-request-id"]??t.headers["x-amz-request-id"],extendedRequestId:t.headers["x-amz-id-2"],cfId:t.headers["x-amz-cf-id"]}),wn=Kt(u),pt=async(t,e,n,i,s)=>{const{hostname:r,protocol:o="https",port:c,path:l}=await t.endpoint(),a={protocol:o,hostname:r,port:c,method:"POST",path:l.endsWith("/")?l.slice(0,-1)+n:l+n,headers:e};return s!==void 0&&(a.body=s),new st(a)};function gt(t){return{"content-type":"application/x-amz-json-1.1","x-amz-target":`AWSCognitoIdentityService.${t}`}}class Pn extends tt.classBuilder().ep({...at}).m(function(e,n,i,s){return[et(i,this.serialize,this.deserialize),nt(i,e.getEndpointParameterInstructions())]}).s("AWSCognitoIdentityService","GetCredentialsForIdentity",{}).n("CognitoIdentityClient","GetCredentialsForIdentityCommand").f(void 0,void 0).ser(en).de(sn).build(){}class Sn extends tt.classBuilder().ep({...at}).m(function(e,n,i,s){return[et(i,this.serialize,this.deserialize),nt(i,e.getEndpointParameterInstructions())]}).s("AWSCognitoIdentityService","GetId",{}).n("CognitoIdentityClient","GetIdCommand").f(void 0,void 0).ser(nn).de(on).build(){}export{xn as CognitoIdentityClient,Pn as GetCredentialsForIdentityCommand,Sn as GetIdCommand};
